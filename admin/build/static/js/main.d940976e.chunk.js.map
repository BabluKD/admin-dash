{"version":3,"sources":["components/Layout/bablu.jpg","containers/Home/index.js","components/UI/Input/index.js","actions/constants.js","urlConfig.js","reducers/auth.reducers.js","reducers/user.reducer.js","reducers/product.reducer.js","reducers/category.reducer.js","reducers/order.reducer.js","reducers/page.reducer.js","reducers/index.js","store/index.js","helpers/axios.js","actions/auth.actions.js","actions/category.action.js","actions/product.action.js","containers/Signin/index.js","components/HOC/PrivateRoute.js","components/Layout/NavItem.js","components/Layout/index.js","components/UI/Modal/index.js","containers/Products/index.js","components/UI/Card/index.js","containers/Orders/index.js","actions/order.action.js","containers/Category/components/UpdateCategoriesModal.js","containers/Category/components/AddCategoryModal.js","containers/Category/index.js","helpers/linearCategories.js","containers/NewPage/index.js","actions/page.action.js","containers/Customers/index.js","App.js","actions/initialData.action.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","paper","height","margin","width","control","padding","spacing","SpacingGrid","classes","Grid","container","className","item","xs","style","textAlign","justifyContent","Paper","fontSize","color","Divider","marginTop","Input","props","input","type","Form","Group","label","Label","value","onChange","placeholder","options","length","map","option","index","key","name","Control","Text","errorMessage","authConstants","userContants","categoryConstansts","productConstants","pageConstants","orderConstants","baseUrl","process","API","api","initState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","initialState","products","categories","buildNewCategories","parentId","category","myCategories","undefined","_id","slug","children","cat","newCategory","push","orders","page","rootReducer","combineReducers","auth","state","action","console","log","payload","updatedCategories","product","order","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosIntance","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","login","a","post","data","setItem","JSON","stringify","getAllCategory","get","categoryList","getProducts","Signin","useState","setEmail","password","setPassword","useSelector","useDispatch","to","Container","Typography","variant","align","Col","md","span","offset","onSubmit","e","preventDefault","FormControl","fullWidth","TextField","required","target","Button","PrivateRoute","Component","component","rest","NavItem","href","Icon","icon","title","location","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","sx","display","py","RouterLink","fontWeight","letterSpacing","textTransform","mr","size","currAdmin","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","createStyles","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","mixins","content","Layout","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Menu","noWrap","Drawer","direction","ChevronRight","ChevronLeft","List","button","ListItemIcon","Avatar","src","defaultAdmin","alt","exact","ListItemText","primary","NewModal","Modal","centered","show","onHide","handleClose","buttons","Header","closeButton","Title","modalTitle","Body","Footer","btn","backgroundColor","Products","setName","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","setShow","productDetailModal","setProductDetailModal","productDetails","setProductDetails","submitProductForm","form","FormData","append","pic","addProduct","then","handleProductPictures","files","handleCloseProductDetailsModal","showProductDetailsModal","Row","Table","responsive","striped","bordered","hover","ButtonGroup","productId","delete","deleteProductById","createCategoryList","img","Card","headerLeft","headerRight","Orders","setType","onOrderUpdate","orderId","updateOrder","orderItem","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","isCompleted","date","d","Date","getFullYear","getMonth","getDate","formatDate","UpdateCategoriesModal","expandedArray","checkedArray","handleCategoryInput","AddCategoryModal","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","handleCategoryImage","Category","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","useEffect","updateCheckedAndExpandedCategories","forEach","find","_index","deleteCategories","ids","checkedIdsArray","concat","result","nodes","renderCategories","charAt","toUpperCase","slice","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","parentClose","parentOpen","leaf","alert","addCategory","updateCategories","updatedCheckedArray","updatedExpandedArray","linearCategories","NewPage","createModal","setCreateModal","setTitle","setCategories","desc","setDesc","banners","setBanners","setProducts","onCategoryChange","handleBannerImages","handleProductImages","submitPageForm","banner","createPage","Customers","customerTemp","customer","fullname","cust","App","parse","Home","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d940976e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bablu.523b25c3.jpg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./CardData.css\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\r\n// import ProgressBar from \"./Progess\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    margin: 10,\r\n    width: 300,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <h2 style={{ textAlign: \"center\" }}>Overall Data</h2>\r\n        <br />\r\n        <Grid container justifyContent=\"center\" spacing={5}>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">Total Orders</div>\r\n                  <div className=\"data\">24000</div>\r\n                  {/* <div className=\"arrow\">16% since last month.</div> */}\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <DashboardIcon style={{ fontSize: 60 }} />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">Total Customers</div>\r\n                  <div className=\"data\">16000</div>\r\n                  {/* <div className=\"arrow\">16% since last month.</div> */}\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <SupervisorAccountIcon\r\n                    style={{ fontSize: 60, color: \"green\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">Task Progess</div>\r\n                  <div className=\"data\">75%</div>\r\n                  <div className=\"arrow\"></div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <SignalCellular4BarIcon\r\n                    style={{ fontSize: 60, color: \"orange\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ margin: \"10px\" }}></div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">TOTAL PROFIT</div>\r\n                  <div className=\"data\">$24,000</div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <MonetizationOnIcon style={{ fontSize: 60, color: \"blue\" }} />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <br />\r\n      <Divider />\r\n\r\n      <Grid item xs={12} style={{ marginTop: 25 }}>\r\n        <h2 style={{ textAlign: \"center\" }}>Monthly Data</h2>\r\n        <br />\r\n        <Grid container justifyContent=\"center\" spacing={5}>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">New Orders</div>\r\n                  <div className=\"data\">4000</div>\r\n                  <div className=\"arrow\">16% since last month.</div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <DashboardIcon style={{ fontSize: 60 }} />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">New Customers</div>\r\n                  <div className=\"data\">2000</div>\r\n                  <div className=\"arrow\">34% since last month.</div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <SupervisorAccountIcon\r\n                    style={{ fontSize: 60, color: \"green\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">Task Progess</div>\r\n                  <div className=\"data\">75%</div>\r\n                  <div className=\"arrow\"></div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <SignalCellular4BarIcon\r\n                    style={{ fontSize: 60, color: \"orange\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ margin: \"10px\" }}></div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper className={classes.paper}>\r\n              <div className=\"carddata\">\r\n                <div className=\"content\">\r\n                  <div className=\"topc\">Profit</div>\r\n                  <div className=\"data\">$17,00</div>\r\n                  <div className=\"arrow\">34% since last month.</div>\r\n                </div>\r\n                <div className=\"icon-color\">\r\n                  <MonetizationOnIcon style={{ fontSize: 60, color: \"blue\" }} />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\n/**\r\n* @author\r\n* @function Input\r\n**/\r\n\r\nconst Input = (props) => {\r\n\r\n  let input = null;\r\n  switch(props.type){\r\n    case 'select':\r\n      input = <Form.Group>\r\n                {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                <select\r\n                  className=\"form-control form-control-sm\"\r\n                  value={props.value}\r\n                  onChange={props.onChange}\r\n                >\r\n                  <option value=\"\">{props.placeholder}</option>\r\n                  {\r\n                    props.options.length > 0 ?\r\n                    props.options.map((option, index) =>\r\n                      <option key={index} value={option.value}>{option.name}</option>\r\n                    ) : null\r\n                  }\r\n                </select>\r\n            </Form.Group>\r\n      break;\r\n    case 'text':\r\n    default:\r\n      input = <Form.Group>\r\n                {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                <Form.Control \r\n                    type={props.type} \r\n                    placeholder={props.placeholder} \r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                    {...props}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  {props.errorMessage}\r\n                </Form.Text>\r\n            </Form.Group>\r\n  }\r\n\r\n\r\n  return input;\r\n\r\n }\r\n\r\nexport default Input","export const authConstants = {\r\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\r\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\r\n  LOGOUT_FAILURE: \"LOGOUT_FAILURE\",\r\n};\r\n\r\nexport const userContants = {\r\n  USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\r\n  USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\r\n  USER_REGISTER_FAILURE: \"USER_REGISTER_FAILURE\",\r\n};\r\n\r\nexport const categoryConstansts = {\r\n  GET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\r\n  GET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\r\n  GET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\r\n  ADD_NEW_CATEGORY_REQUEST: \"ADD_NEW_CATEGORY_REQUEST\",\r\n  ADD_NEW_CATEGORY_SUCCESS: \"ADD_NEW_CATEGORY_SUCCESS\",\r\n  ADD_NEW_CATEGORY_FAILURE: \"ADD_NEW_CATEGORY_FAILURE\",\r\n  UPDATE_CATEGORIES_REQUEST: \"UPDATE_CATEGORIES_REQUEST\",\r\n  UPDATE_CATEGORIES_SUCCESS: \"UPDATE_CATEGORIES_SUCCESS\",\r\n  UPDATE_CATEGORIES_FAILURE: \"UPDATE_CATEGORIES_FAILURE\",\r\n  DELETE_CATEGORIES_REQUEST: \"DELETE_CATEGORIES_REQUEST\",\r\n  DELETE_CATEGORIES_SUCCESS: \"DELETE_CATEGORIES_SUCCESS\",\r\n  DELETE_CATEGORIES_FAILURE: \"DELETE_CATEGORIES_FAILURE\",\r\n};\r\n\r\nexport const productConstants = {\r\n  GET_ALL_PRODUCTS_REQUEST: \"GET_ALL_PRODUCTS_REQUEST\",\r\n  GET_ALL_PRODUCTS_SUCCESS: \"GET_ALL_PRODUCTS_SUCCESS\",\r\n  GET_ALL_PRODUCTS_FAILURE: \"GET_ALL_PRODUCTS_FAILURE\",\r\n\r\n  DELETE_PRODUCT_BY_ID_REQUEST: \"DELETE_PRODUCT_BY_ID_REQUEST\",\r\n  DELETE_PRODUCT_BY_ID_SUCCESS: \"DELETE_PRODUCT_BY_ID_SUCCESS\",\r\n  DELETE_PRODUCT_BY_ID_FAILURE: \"DELETE_PRODUCT_BY_ID_FAILURE\",\r\n\r\n  ADD_PRODUCT_REQUEST: \"ADD_PRODUCT_REQUEST\",\r\n  ADD_PRODUCT_SUCCESS: \"ADD_PRODUCT_REQUEST\",\r\n  ADD_PRODUCT_FAILURE: \"ADD_PRODUCT_FAILURE\",\r\n};\r\n\r\nexport const initialDataConstants = {\r\n  GET_ALL_INITIAL_DATA_REQUEST: \"GET_ALL_INITIAL_DATA_REQUEST\",\r\n  GET_ALL_INITIAL_DATA_SUCCESS: \"GET_ALL_INITIAL_DATA_SUCCESS\",\r\n  GET_ALL_INITIAL_DATA_FAILURE: \"GET_ALL_INITIAL_DATA_FAILURE\",\r\n};\r\n\r\nexport const pageConstants = {\r\n  CREATE_PAGE_REQUEST: \"CREATE_PAGE_REQUEST\",\r\n  CREATE_PAGE_SUCCESS: \"CREATE_PAGE_SUCCESS\",\r\n  CREATE_PAGE_FAILURE: \"CREATE_PAGE_FAILURE\",\r\n};\r\n\r\nexport const orderConstants = {\r\n  GET_CUSTOMER_ORDER_REQUEST: \"GET_CUSTOMER_ORDER_REQUEST\",\r\n  GET_CUSTOMER_ORDER_SUCCESS: \"GET_CUSTOMER_ORDER_SUCCESS\",\r\n  GET_CUSTOMER_ORDER_FAILURE: \"GET_CUSTOMER_ORDER_FAILURE\",\r\n\r\n  UPDATE_CUSTOMER_ORDER_REQUEST: \"UPDATE_CUSTOMER_ORDER_REQUEST\",\r\n  UPDATE_CUSTOMER_ORDER_SUCCESS: \"UPDATE_CUSTOMER_ORDER_SUCCESS\",\r\n  UPDATE_CUSTOMER_ORDER_FAILURE: \"UPDATE_CUSTOMER_ORDER_FAILURE\",\r\n};\r\n","const baseUrl = process.env.API || \"http://localhost:5000\";\r\n//const baseUrl = \"http://localhost:2000\";\r\n\r\nexport const api = `${baseUrl}/api`;\r\n\r\nexport const generatePublicUrl = (fileName) => {\r\n  return `${baseUrl}/public/${fileName}`;\r\n};\r\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    token: null,\r\n    user: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        picture: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return state;\r\n}","import { userContants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type){\r\n        case userContants.USER_REGISTER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case userContants.USER_REGISTER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n            break;\r\n        case userContants.USER_REGISTER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { productConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    products: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                products: action.payload.products\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { categoryConstansts } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if(parentId == undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n    \r\n    for(let cat of categories){\r\n\r\n        if(cat._id == parentId){\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return myCategories;\r\n}\r\n\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type){\r\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n            console.log('updated categoires', updatedCategories);\r\n            \r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { orderConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  orders: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { pageConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error: null,\r\n    loading: false,\r\n    page: {}\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case pageConstants.CREATE_PAGE_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case pageConstants.CREATE_PAGE_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case pageConstants.CREATE_PAGE_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import authReducer from './auth.reducers';\r\nimport userReducer from './user.reducer';\r\nimport productReducer from './product.reducer';\r\nimport categoryReducer from './category.reducer';\r\nimport orderReducer from './order.reducer';\r\nimport pageReducer from './page.reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    order: orderReducer,\r\n    page: pageReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from '../reducers';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import axios from 'axios';\r\nimport { api } from '../urlConfig';\r\nimport store from '../store';\r\nimport { authConstants } from '../actions/constants';\r\n\r\nconst token = window.localStorage.getItem('token');\r\n\r\nconst axiosIntance = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n        'Authorization': token ? `Bearer ${token}` : ''\r\n    }\r\n});\r\n\r\naxiosIntance.interceptors.request.use((req) => {\r\n    const { auth } = store.getState();\r\n    if(auth.token){\r\n        req.headers.Authorization = `Bearer ${auth.token}`;\r\n    }\r\n    return req;\r\n})\r\n\r\naxiosIntance.interceptors.response.use((res) => {\r\n    return res;\r\n}, (error) => {\r\n    console.log(error.response);\r\n    const status = error.response ? error.response.status : 500;\r\n    if(status && status === 500){\r\n        localStorage.clear();\r\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nexport default axiosIntance;","import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const login = (user) => {\r\n  console.log(user);\r\n\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    const res = await axios.post(`http://localhost:5000/api/admin/signin`, {\r\n      ...user,\r\n    });\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      const { token, user } = res.data;\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      if (res.status === 400) {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: { error: res.data.error },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to login\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n    const res = await axios.post(`/admin/signout`);\r\n\r\n    if (res.status === 200) {\r\n      localStorage.clear();\r\n      dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGOUT_FAILURE,\r\n        payload: { error: res.data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n","import axios from \"../helpers/axios\";\r\nimport { categoryConstansts } from \"./constants\";\r\n\r\nconst getAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: categoryConstansts.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n\r\n            const { categoryList } = res.data;\r\n\r\n            dispatch({\r\n                type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstansts.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {   \r\n            console.log(error.response);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_REQUEST });\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_SUCCESS });\r\n            dispatch(getAllCategory());\r\n        } else {\r\n            const { error } = res.data;\r\n            dispatch({\r\n                type: categoryConstansts.UPDATE_CATEGORIES_FAILURE,\r\n                payload: { error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstansts.DELETE_CATEGORIES_REQUEST });\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status == 201) {\r\n            dispatch(getAllCategory());\r\n            dispatch({ type: categoryConstansts.DELETE_CATEGORIES_SUCCESS });\r\n        } else {\r\n            const { error } = res.data;\r\n            dispatch({\r\n                type: categoryConstansts.DELETE_CATEGORIES_FAILURE,\r\n                payload: { error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    getAllCategory\r\n}","import axios from \"../helpers/axios\";\r\nimport { productConstants } from \"./constants\";\r\n\r\n// new action\r\nconst getProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"getProducts called\")\r\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\r\n      const res = await axios.post(`product/getProducts`);\r\n      if (res.status === 200) {\r\n        const { products } = res.data;\r\n        dispatch({\r\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n          payload: { products },\r\n        });\r\n      } else {\r\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addProduct = (form) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\r\n      const res = await axios.post(`product/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// new action\r\nexport const deleteProductById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`product/deleteProductById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Form, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { login } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  // createStyles,\r\n  makeStyles,\r\n  // withStyles,\r\n  // Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\n/**\r\n * @author\r\n * @function Signin\r\n **/\r\n\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(email, password, \"hi\");\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(login(user));\r\n  };\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n      <Container className=\"mt-5 pt-5\">\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          {/* <Image src=\"../../img/logo1.png\" alt=\"logo\" /> */}\r\n          <br />\r\n          Admin Sign in\r\n        </Typography>\r\n        {/* <Row style={{ marginTop: \"25vh\" }}> */}\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Form onSubmit={userLogin}>\r\n            <FormControl fullWidth={true}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                type=\"email\"\r\n                label=\"Enter Email\"\r\n                name=\"admin-email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth={true}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                label=\"Enter Password\"\r\n                name=\"admin-password\"\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {/* <Input \r\n                                label=\"Email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n\r\n                            <Input \r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            /> */}\r\n            <FormControl fullWidth={true}>\r\n              <Button variant=\"primary\" type=\"submit\" name=\"adminLoginSubmit\">\r\n                Submit\r\n              </Button>\r\n            </FormControl>\r\n          </Form>\r\n        </Col>\r\n        {/* </Row> */}\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return <Route {...rest} component={(props) => {\r\n        const token = window.localStorage.getItem('token');\r\n        if(token){\r\n            return <Component {...props} />\r\n        }\r\n        else{\r\n            return <Redirect to={`/signin`} />\r\n        }\r\n    }} />\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\n\nimport {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n\r\nimport NavItem from \"./NavItem\";\r\n\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Avatar,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  CssBaseline,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MoveToInbox as InboxIcon,\r\n  Mail as MailIcon,\r\n  Menu as MenuIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n} from \"react-feather\";\r\nimport defaultAdmin from \"./bablu.jpg\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst currAdmin = {\r\n  avatar: \"./bablu.jpg\",\r\n  jobTitle: \"Pronto Admin\",\r\n  name: \"Bablu Kumar\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/page\",\r\n    icon: UsersIcon,\r\n    title: \"Pages\",\r\n  },\r\n  {\r\n    href: \"/category\",\r\n    icon: UsersIcon,\r\n    title: \"Categories\",\r\n  },\r\n  {\r\n    href: \"/products\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Products\",\r\n  },\r\n  {\r\n    href: \"/customers\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n  },\r\n  {\r\n    href: \"/orders\",\r\n    icon: UserIcon,\r\n    title: \"Orders\",\r\n  },\r\n  {\r\n    href: \"/\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Admin Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          <NavLink to=\"/account\">\r\n            <ListItem button key={currAdmin.name}>\r\n              <ListItemIcon><Avatar src={defaultAdmin} alt={currAdmin.name} /></ListItemIcon>\r\n              <h4>{currAdmin.name}</h4>\r\n            </ListItem>\r\n              <p style={{ marginLeft: '90px' }}>{currAdmin.jobTitle}</p>\r\n          </NavLink>\r\n        <Divider />\r\n\r\n          {/* {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))} */}\r\n          {items.map((item, index) => (\r\n            <NavLink exact to={item.href}>\r\n              <ListItem button key={item.title}>\r\n                <ListItemIcon>\r\n                  <NavItem style={{marginLeft: '-15px'}} href={item.href} key={item.title} icon={item.icon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>\r\n            </NavLink>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function Modal\r\n **/\r\n\r\nconst NewModal = (props) => {\r\n  return (\r\n    <Modal\r\n      centered\r\n      size={props.size}\r\n      show={props.show}\r\n      onHide={props.handleClose}\r\n      buttons={props.Button}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.modalTitle}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {props.buttons ? (\r\n          props.buttons.map((btn, index) => (\r\n            <Button key={index} variant={btn.color} onClick={btn.onClick}>\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <>\r\n            {/* <Button variant=\"secondary\" onClick={props.handleClose}>\r\n              Close\r\n            </Button> */}\r\n            <Button\r\n              variant=\"primary\"\r\n              {...props}\r\n              style={{ backgroundColor: \"#333\" }}\r\n              onClick={props.onSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  IoIosAdd,\r\n  IoMdInformationCircle,\r\n  IoIosTrash,\r\n  IoMdCreate,\r\n} from \"react-icons/io\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from \"../../actions\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\nconst Products = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form)).then(() => setShow(false));\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table responsive=\"sm\" striped bordered hover>\r\n        <thead className=\"bg-dark text-light\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product, index) => (\r\n                <tr key={product._id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.slug}</td>\r\n                  <td>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => showProductDetailsModal(product)}\r\n                      >\r\n                        <IoMdInformationCircle />&nbsp;Info\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                          const payload = {\r\n                            productId: product._id,\r\n                          };\r\n                          dispatch(deleteProductById(payload));\r\n                        }}\r\n                      >\r\n                        <IoIosTrash />&nbsp;Del\r\n                      </Button>\r\n                      <Button variant=\"secondary\"><IoMdCreate />&nbsp;Edit</Button>\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>Select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          label=\"Product Image\"\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={picture.img} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    // <Layout sidebar>\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h4>\r\n                <b>Products</b>\r\n              </h4>\r\n              <Button variant=\"success\" className=\"mb-2\" onClick={handleShow}>\r\n              <IoIosAdd />&nbsp;Add Product\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </>\r\n    //</Layout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Card\r\n **/\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card\" {...props}>\r\n      {(props.headerLeft || props.headerRight) && (\r\n        <div className=\"cardHeader\">\r\n          {props.headerLeft && <div>{props.headerLeft}</div>}\r\n          {props.headerRight && props.headerRight}\r\n        </div>\r\n      )}\r\n\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateOrder } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Orders\r\n **/\r\n\r\nconst Orders = (props) => {\r\n  const order = useSelector((state) => state.order);\r\n  const [type, setType] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onOrderUpdate = (orderId) => {\r\n    const payload = {\r\n      orderId,\r\n      type,\r\n    };\r\n    dispatch(updateOrder(payload));\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    //<Layout sidebar>\r\n    <>\r\n      {order.orders.map((orderItem, index) => (\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n          key={index}\r\n          headerLeft={orderItem._id}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"50px 50px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div className=\"title\">Items</div>\r\n              {orderItem.items.map((item, index) => (\r\n                <div className=\"value\" key={index}>\r\n                  {item.productId.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Total Price</span>\r\n              <br />\r\n              <span className=\"value\">{orderItem.totalAmount}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Type</span> <br />\r\n              <span className=\"value\">{orderItem.paymentType}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Status</span> <br />\r\n              <span className=\"value\">{orderItem.paymentStatus}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              boxSizing: \"border-box\",\r\n              padding: \"100px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"orderTrack\">\r\n              {orderItem.orderStatus.map((status) => (\r\n                <div\r\n                  className={`orderStatus ${\r\n                    status.isCompleted ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                  ></div>\r\n                  <div className=\"orderInfo\">\r\n                    <div className=\"status\">{status.type}</div>\r\n                    <div className=\"date\">{formatDate(status.date)}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* select input to apply order action */}\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <select onChange={(e) => setType(e.target.value)}>\r\n                <option value={\"\"}>select status</option>\r\n                {orderItem.orderStatus.map((status) => {\r\n                  return (\r\n                    <>\r\n                      {!status.isCompleted ? (\r\n                        <option key={status.type} value={status.type}>\r\n                          {status.type}\r\n                        </option>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {/* button to confirm action */}\r\n\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\r\n                confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n      </>\r\n    //</Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import axios from \"../helpers/axios\";\r\nimport { orderConstants } from \"./constants\";\r\n\r\nexport const getCustomerOrders = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/order/getCustomerOrders\");\r\n      if (res.status === 200) {\r\n        const { orders } = res.data;\r\n        dispatch({\r\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n          payload: { orders },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/order/update\", payload);\r\n      if (res.status === 201) {\r\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\r\n        dispatch(getCustomerOrders());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport Input from '../../../components/UI/Input';\r\nimport Modal from '../../../components/UI/Modal';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\n\r\nconst UpdateCategoriesModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        handleClose,\r\n        modalTitle,\r\n        size,\r\n        expandedArray,\r\n        checkedArray,\r\n        handleCategoryInput,\r\n        categoryList,\r\n        onSubmit\r\n    } = props;\r\n\r\n    console.log({expandedArray, checkedArray})\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            handleClose={handleClose}\r\n            onSubmit={onSubmit}\r\n            modalTitle={modalTitle}\r\n            size={size}\r\n        >\r\n            <Row>\r\n                <Col>\r\n                    <h6>Expanded</h6>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                expandedArray.length > 0 &&\r\n                expandedArray.map((item, index) =>\r\n                    <Row key={index}>\r\n                        <Col>\r\n                            <Input\r\n                                value={item.name}\r\n                                placeholder={`Category Name`}\r\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={item.parentId}\r\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\r\n                                <option>select category</option>\r\n                                {\r\n                                    categoryList.map(option =>\r\n                                        <option key={option.value} value={option.value}>{option.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={item.type}\r\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')}\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"store\">Store</option>\r\n                                <option value=\"product\">Product</option>\r\n                                <option value=\"page\">Page</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            <h6>Checked Categories</h6>\r\n            {\r\n                checkedArray.length > 0 &&\r\n                checkedArray.map((item, index) =>\r\n                    <Row key={index}>\r\n                        <Col>\r\n                            <Input\r\n                                value={item.name}\r\n                                placeholder={`Category Name`}\r\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={item.parentId}\r\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\r\n                                <option>select category</option>\r\n                                {\r\n                                    categoryList.map(option =>\r\n                                        <option key={option.value} value={option.value}>{option.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={item.type}\r\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')}\r\n                            \r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"store\">Store</option>\r\n                                <option value=\"product\">Product</option>\r\n                                <option value=\"page\">Page</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UpdateCategoriesModal;","import React from 'react';\r\nimport Input from '../../../components/UI/Input';\r\nimport Modal from '../../../components/UI/Modal';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst AddCategoryModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        handleClose,\r\n        modalTitle,\r\n        categoryName,\r\n        setCategoryName,\r\n        parentCategoryId,\r\n        setParentCategoryId,\r\n        categoryList,\r\n        handleCategoryImage,\r\n        onSubmit\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            handleClose={handleClose}\r\n            onSubmit={onSubmit}\r\n            modalTitle={modalTitle}\r\n        >\r\n            <Row>\r\n                <Col>\r\n                    <Input\r\n                        value={categoryName}\r\n                        placeholder={`Category Name`}\r\n                        onChange={(e) => setCategoryName(e.target.value)}\r\n                        className=\"form-control-sm\"\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <select\r\n                        className=\"form-control form-control-sm\"\r\n                        value={parentCategoryId}\r\n                        onChange={(e) => setParentCategoryId(e.target.value)}>\r\n                        <option>select category</option>\r\n                        {\r\n                            categoryList.map(option =>\r\n                                <option key={option.value} value={option.value}>{option.name}</option>)\r\n                        }\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddCategoryModal;","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {\r\n    IoMdCheckboxOutline,\r\n    IoMdCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoMdCreate,\r\n    IoIosDocument,\r\n    IoIosFolderOpen,\r\n    IoIosFolder,\r\n} from 'react-icons/io'\r\n\r\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!category.loading) {\r\n            console.log(\"Category Showing\")\r\n            setShow(false);\r\n        }\r\n\r\n    }, [category.loading]);\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n\r\n        if (categoryName === \"\") {\r\n            alert('Category name is required');\r\n            setShow(false);\r\n            return;\r\n        }\r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name.charAt(0).toUpperCase() + category.name.slice(1),\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                type: category.type\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const updateCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setUpdateCategoryModal(true);\r\n    }\r\n\r\n    const updateCheckedAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n    }\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        console.log(value);\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n                index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n                index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        dispatch(updateCategories(form));\r\n        \r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                });\r\n        }\r\n\r\n        setDeleteCategoryModal(false);\r\n\r\n\r\n    }\r\n\r\n    const renderDeleteCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n                    }\r\n                ]}\r\n            >\r\n\r\n\r\n                <h5>Expanded</h5>\r\n                { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n                <h5>Checked</h5>\r\n                { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const categoryList = createCategoryList(category.categories);\r\n\r\n    return (\r\n        // <Layout sidebar>\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h4><b>Categories</b></h4>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span style={{fontSize: '18px'}}>Actions: </span>\r\n                                <Button variant=\"success\" onClick={handleShow}><IoIosAdd /> <span>Add</span></Button>\r\n                                <Button variant=\"danger\" onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></Button>\r\n                                <Button variant=\"secondary\" onClick={updateCategory}><IoMdCreate /> <span>Edit</span></Button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} >\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoMdCheckbox />,\r\n                                uncheck: <IoMdCheckboxOutline />,\r\n                                halfCheck: <IoMdCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                                parentClose: <IoIosFolder />,\r\n                                parentOpen: <IoIosFolderOpen />,\r\n                                leaf: <IoIosDocument />,\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={() => setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                categoryList={categoryList}\r\n                handleCategoryImage={handleCategoryImage}\r\n            />\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={() => setUpdateCategoryModal(false)}\r\n                onSubmit={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size=\"lg\"\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n            {/* {renderAddCategoryModal()} */}\r\n            {renderDeleteCategoryModal()}\r\n            </>\r\n        // </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category","const linearCategories = (categories, options = []) => {\r\n\r\n    for (let category of categories) {\r\n        options.push({ \r\n            value: category._id, \r\n            name: category.name, \r\n            parentId: category.parentId,\r\n            type: category.type\r\n        });\r\n        if (category.children.length > 0) {\r\n            linearCategories(category.children, options)\r\n        }\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nexport default linearCategories;","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport linearCategories from \"../../helpers/linearCategories\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPage } from \"../../actions\";\r\n\r\nimport {\r\n    IoIosAdd,\r\n  } from \"react-icons/io\";\r\n\r\n\r\n/**\r\n * @author\r\n * @function NewPage\r\n **/\r\n\r\nconst NewPage = (props) => {\r\n  const [createModal, setCreateModal] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const category = useSelector((state) => state.category);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [banners, setBanners] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const page = useSelector((state) => state.page);\r\n\r\n  useEffect(() => {\r\n    setCategories(linearCategories(category.categories));\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    console.log(page);\r\n    if (!page.loading) {\r\n      setCreateModal(false);\r\n      setTitle(\"\");\r\n      setCategoryId(\"\");\r\n      setDesc(\"\");\r\n      setProducts([]);\r\n      setBanners([]);\r\n    }\r\n  }, [page]);\r\n\r\n  const onCategoryChange = (e) => {\r\n    const category = categories.find(\r\n      (category) => category.value == e.target.value\r\n    );\r\n    setCategoryId(e.target.value);\r\n    setType(category.type);\r\n  };\r\n\r\n  const handleBannerImages = (e) => {\r\n    console.log(e);\r\n    setBanners([...banners, e.target.files[0]]);\r\n  };\r\n\r\n  const handleProductImages = (e) => {\r\n    console.log(e);\r\n    setProducts([...products, e.target.files[0]]);\r\n  };\r\n\r\n  const submitPageForm = (e) => {\r\n    //e.target.preventDefault();\r\n\r\n    if (title === \"\") {\r\n      alert(\"Title is required\");\r\n      setCreateModal(false);\r\n      return;\r\n    }\r\n\r\n    const form = new FormData();\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", desc);\r\n    form.append(\"category\", categoryId);\r\n    form.append(\"type\", type);\r\n    banners.forEach((banner, index) => {\r\n      form.append(\"banners\", banner);\r\n    });\r\n    products.forEach((product, index) => {\r\n      form.append(\"products\", product);\r\n    });\r\n\r\n    dispatch(createPage(form));\r\n  };\r\n\r\n  const renderCreatePageModal = () => {\r\n    return (\r\n      <Modal\r\n        show={createModal}\r\n        modalTitle={\"Create New Page\"}\r\n        handleClose={() => setCreateModal(false)}\r\n        onSubmit={submitPageForm}\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              {/* <select\r\n                                className=\"form-control\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">select category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n                            </select> */}\r\n              <Input\r\n                type=\"select\"\r\n                value={categoryId}\r\n                onChange={onCategoryChange}\r\n                options={categories}\r\n                placeholder={\"Select Category\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder={\"Page Title\"}\r\n                className=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                placeholder={\"Page Desc\"}\r\n                className=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {banners.length > 0\r\n            ? banners.map((banner, index) => (\r\n                <Row key={index}>\r\n                  <Col>{banner.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"banners\"\r\n                onChange={handleBannerImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {products.length > 0\r\n            ? products.map((product, index) => (\r\n                <Row key={index}>\r\n                  <Col>{product.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"products\"\r\n                onChange={handleProductImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    // <Layout sidebar>\r\n    <>\r\n      {page.loading ? (\r\n        <p>Creating Page...please wait</p>\r\n      ) : (\r\n        <>\r\n          {renderCreatePageModal()}\r\n          <Button variant=\"success\" onClick={() => setCreateModal(true)}>\r\n            <IoIosAdd />\r\n            &nbsp;Create Page\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n    // </Layout>\r\n  );\r\n};\r\n\r\nexport default NewPage;\r\n","import axios from \"../helpers/axios\";\r\nimport { pageConstants } from \"./constants\";\r\n\r\nexport const createPage = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: pageConstants.CREATE_PAGE_REQUEST });\r\n        try{\r\n            const res = await axios.post('/page/create', form);\r\n            if(res.status === 201){\r\n                dispatch({\r\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\r\n                    payload: { page: res.data.page }\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: pageConstants.CREATE_PAGE_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                });\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { addProduct, deleteProductById } from \"../../actions\";\r\nimport \"./style.css\";\r\n\r\nimport {\r\n  IoIosAdd,\r\n  IoMdInformationCircle,\r\n  IoIosTrash,\r\n  IoMdCreate,\r\n} from \"react-icons/io\";\r\n\r\n/**\r\n * @author\r\n * @function Customers\r\n **/\r\n\r\nconst Customers = (props) => {\r\n  // const [fullname, setFullname] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [price, setPrice] = useState(\"\");\r\n  // const [description, setDescription] = useState(\"\");\r\n  // const [categoryId, setCategoryId] = useState(\"\");\r\n  // const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const customer = useSelector((state) => state.customer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  // const submitProductForm = () => {\r\n  //   const form = new FormData();\r\n  //   form.append(\"fullname\", fullname);\r\n  //   form.append(\"email\", email);\r\n  //   form.append(\"price\", price);\r\n  //   form.append(\"description\", description);\r\n  //   form.append(\"category\", categoryId);\r\n\r\n  //   for (let pic of productPictures) {\r\n  //     form.append(\"productPicture\", pic);\r\n  //   }\r\n\r\n  //   dispatch(addProduct(form)).then(() => setShow(false));\r\n  // };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  // const handleProductPictures = (e) => {\r\n  //   setProductPictures([...productPictures, e.target.files[0]]);\r\n  // };\r\n  const customerTemp = [{\r\n    fullname : \"zafar im\",\r\n    email : \"testuser@test.com\"\r\n  }]\r\n\r\n  const renderCustomers = () => {\r\n    return (\r\n      <Table responsive=\"sm\" striped bordered hover>\r\n        <thead className=\"bg-dark text-light\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customerTemp.length > 0\r\n            ? customerTemp.map((cust, index) => (\r\n                <tr key={cust._id}>\r\n                  <td>{index+1}</td>\r\n                  <td>{cust.fullname}</td>\r\n                  <td>{cust.email}</td>\r\n                  \r\n                    {/* <td>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => showProductDetailsModal(product)}\r\n                      >\r\n                        <IoMdInformationCircle />\r\n                        &nbsp;Info\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                          const payload = {\r\n                            productId: product._id,\r\n                          };\r\n                          dispatch(deleteProductById(payload));\r\n                        }}\r\n                      >\r\n                        <IoIosTrash />\r\n                        &nbsp;Del\r\n                      </Button>\r\n                      <Button variant=\"secondary\">\r\n                        <IoMdCreate />\r\n                        &nbsp;Edit\r\n                      </Button> \r\n                    </ButtonGroup>\r\n                      </td>*/}\r\n                  \r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  // const renderAddProductModal = () => {\r\n  //   return (\r\n  //     <Modal\r\n  //       show={show}\r\n  //       handleClose={handleClose}\r\n  //       modalTitle={\"Add New Product\"}\r\n  //       onSubmit={submitProductForm}\r\n  //     >\r\n  //       <Input\r\n  //         label=\"Full Name\"\r\n  //         value={fullname}\r\n  //         placeholder={`Product Name`}\r\n  //         onChange={(e) => setFullname(e.target.value)}\r\n  //       />\r\n  //       <Input\r\n  //         label=\"email\"\r\n  //         value={email}\r\n  //         placeholder={`email`}\r\n  //         onChange={(e) => setEmail(e.target.value)}\r\n  //       />\r\n  //       <Input\r\n  //         label=\"Price\"\r\n  //         value={price}\r\n  //         placeholder={`Price`}\r\n  //         onChange={(e) => setPrice(e.target.value)}\r\n  //       />\r\n  //       <Input\r\n  //         label=\"Description\"\r\n  //         value={description}\r\n  //         placeholder={`Description`}\r\n  //         onChange={(e) => setDescription(e.target.value)}\r\n  //       />\r\n  //       <select\r\n  //         className=\"form-control\"\r\n  //         value={categoryId}\r\n  //         onChange={(e) => setCategoryId(e.target.value)}\r\n  //       >\r\n  //         <option>select category</option>\r\n  //         {createCategoryList(category.categories).map((option) => (\r\n  //           <option key={option.value} value={option.value}>\r\n  //             {option.name}\r\n  //           </option>\r\n  //         ))}\r\n  //       </select>\r\n  //       {productPictures.length > 0\r\n  //         ? productPictures.map((pic, index) => (\r\n  //             <div key={index}>{pic.name}</div>\r\n  //           ))\r\n  //         : null}\r\n  //       <input\r\n  //         type=\"file\"\r\n  //         name=\"productPicture\"\r\n  //         onChange={handleProductPictures}\r\n  //       />\r\n  //     </Modal>\r\n  //   );\r\n  // };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  // const renderProductDetailsModal = () => {\r\n  //   if (!productDetails) {\r\n  //     return null;\r\n  //   }\r\n\r\n  //   return (\r\n  //     <Modal\r\n  //       show={productDetailModal}\r\n  //       handleClose={handleCloseProductDetailsModal}\r\n  //       modalTitle={\"Product Details\"}\r\n  //       size=\"lg\"\r\n  //     >\r\n  //       <Row>\r\n  //         <Col md=\"6\">\r\n  //           <label className=\"key\">Name</label>\r\n  //           <p className=\"value\">{productDetails.name}</p>\r\n  //         </Col>\r\n  //         <Col md=\"6\">\r\n  //           <label className=\"key\">Price</label>\r\n  //           <p className=\"value\">{productDetails.price}</p>\r\n  //         </Col>\r\n  //       </Row>\r\n  //       <Row>\r\n  //         <Col md=\"6\">\r\n  //           <label className=\"key\">Quantity</label>\r\n  //           <p className=\"value\">{productDetails.quantity}</p>\r\n  //         </Col>\r\n  //         <Col md=\"6\">\r\n  //           <label className=\"key\">Category</label>\r\n  //           <p className=\"value\">{productDetails.category.name}</p>\r\n  //         </Col>\r\n  //       </Row>\r\n  //       <Row>\r\n  //         <Col md=\"12\">\r\n  //           <label className=\"key\">Description</label>\r\n  //           <p className=\"value\">{productDetails.description}</p>\r\n  //         </Col>\r\n  //       </Row>\r\n  //       <Row>\r\n  //         <Col>\r\n  //           <label className=\"key\">Product Pictures</label>\r\n  //           <div style={{ display: \"flex\" }}>\r\n  //             {productDetails.productPictures.map((picture) => (\r\n  //               <div className=\"productImgContainer\">\r\n  //                 <img src={picture.img} alt=\"\" />\r\n  //               </div>\r\n  //             ))}\r\n  //           </div>\r\n  //         </Col>\r\n  //       </Row>\r\n  //     </Modal>\r\n  //   );\r\n  // };\r\n  return (\r\n    // <Layout sidebar>\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h4>\r\n                <b>Customers</b>\r\n              </h4>\r\n              {/* <Button variant=\"success\" className=\"mb-2\" onClick={handleShow}>\r\n                <IoIosAdd />\r\n                &nbsp;Add Customer\r\n              </Button> */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderCustomers()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {/* {renderAddProductModal()} */}\r\n      {/* {renderProductDetailsModal()} */}\r\n    </>\r\n    // </Layout>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./containers/Home\";\r\nimport Signin from \"./containers/Signin\";\r\n// import Signup from './containers/Signup';\r\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserLoggedIn, getInitialData } from \"./actions\";\r\nimport Products from \"./containers/Products\";\r\nimport Orders from \"./containers/Orders\";\r\nimport Category from \"./containers/Category\";\r\nimport NewPage from \"./containers/NewPage\";\r\nimport Customers from \"./containers/Customers\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  //componentDidMount or componentDidUpdate\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLoggedIn());\r\n    }\r\n    if (auth.authenticate) {\r\n      dispatch(getInitialData());\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/signin\" exact component={Signin} />\r\n        <Layout>\r\n          <PrivateRoute path=\"/\" exact component={Home} />\r\n          <PrivateRoute path=\"/page\" exact component={NewPage} />\r\n          <PrivateRoute path=\"/category\" exact component={Category} />\r\n          <PrivateRoute path=\"/products\" exact component={Products} />\r\n          <PrivateRoute path=\"/orders\" exact component={Orders} />\r\n          <PrivateRoute path=\"/customers\" exact component={Customers} />\r\n        </Layout>\r\n      </Switch>\r\n    </BrowserRouter>\r\n    // <div className=\"App\">\r\n\r\n    //   <Switch>\r\n    //     <Route path=\"/\" exact component={Home} />\r\n    //     <Route path=\"/page\" component={NewPage} />\r\n    //     <Route path=\"/category\" component={Category} />\r\n    //     <Route path=\"/products\" component={Products} />\r\n    //     <Route path=\"/orders\" component={Orders} />\r\n\r\n    //     <Route path=\"/signin\" component={Signin} />\r\n    //     {/* <Route path=\"/signup\" component={Signup} /> */}\r\n    //   </Switch>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  initialDataConstants,\r\n  categoryConstansts,\r\n  productConstants,\r\n  orderConstants,\r\n} from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch) => {\r\n    const res = await axios.post(`/initialData`);\r\n    if (res.status === 200) {\r\n      const { categories, products, orders } = res.data;\r\n      dispatch({\r\n        type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\r\n        payload: { categories },\r\n      });\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: { products },\r\n      });\r\n      dispatch({\r\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n        payload: { orders },\r\n      });\r\n    }\r\n    console.log(res);\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}